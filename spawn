#!/usr/bin/env python
from subprocess import call,PIPE
import os,sys,time,json

if __name__ == '__main__':
    args = dict(zip(sys.argv[0::2],sys.argv[1::2]))
    vals = args.values()
    if 'init' in vals:
        try:
            if '-c' in args:
                open('./.spawn','w').write('{"name":"./%s","port":"%s","command":"%s"}'%(args['-f'],args['-p'],args['-c']))
            else:
                open('./.spawn','w').write('{"name":"./%s","port":"%s"}'%(args['-f'],args['-p']))
        except KeyError:
            print 'invalid arguments for init\nuse: spawn init -f <filename> -p <port> [-c <command>]'
    elif 'start' in vals:
        try:
            os.chdir(args['-d'])
        except KeyError: pass
        try:
            config = json.loads(open('./.spawn','r').read())
            print 'starting spawn process...'
            c = call('spawn-fcgi  -f %s -p %s'%(config['name'],config['port']),shell=True,stdout=PIPE,stderr=PIPE)
            if  "command" in config: call(config['command'],shell=True)
            if not c: print "OK"
            else: print "ERROR: %s"%c
        except IOError: print 'run spawn init first'
        except ValueError: print "error in config file"
    elif 'stop' in vals:
        try:
            os.chdir(args['-d'])
        except KeyError: pass
        try:
            print 'stopping spawn process...'
            config = json.loads(open('./.spawn','r').read())
            c = call('pgrep -f "%s" | xargs kill'%config['name'],shell=True,stdout=PIPE,stderr=PIPE)
            print "OK"
        except IOError: print 'run spawn init first'
    elif 'restart' in vals:
        try:
            print 'restarting spawn process...'
            config = json.loads(open('./.spawn','r').read())
            call('pgrep -f "%s" | xargs kill'%config['name'],shell=True)
            time.sleep(1)
            c = call('spawn-fcgi -f %s -p %s'%(config['name'],config['port']),shell=True,stdout=PIPE,stderr=PIPE)
            if not c: print "OK"
            else: print "ERROR: %s"%c
        except IOError: print 'run spawn init first'
    elif 'status' in vals:
        print 'current spawn config:'
        config = json.loads(open('./.spawn','r').read())
        print 'script name:',config['name']
        print 'port:',config['port']
        if 'command' in config:
            print 'on start:',config['command']

    elif 'purge' in vals:
        print 'removing spawn config'
        try:
            os.remove('.spawn')
        except OSError: print 'unable to remove config file'
        print "OK"
    else: print 'unknown command\nuse spawn init|start|stop|restart'
